<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.baizhi.dao.StudentDao">
    <resultMap id="all" type="Student">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="age" property="age"></result>
        <result column="qq" property="qq"></result>
        <result column="phone" property="phone"></result>
        <result column="bir" property="bir"></result>
        <result column="starts" property="starts"></result>
        <result column="attr" property="attr"></result>
        <result column="mark" property="mark"></result>
        <association property="clazz" javaType="Clazz">
            <id column="cid" property="id"></id>
            <result column="cname" property="name"></result>
        </association>
        <association property="group" javaType="Group">
            <id column="gid" property="id"></id>
            <result column="gname" property="name"></result>
        </association>
        <association property="city" javaType="City">
            <id column="tcid" property="id"></id>
            <result column="tcname" property="name"></result>
        </association>
        <collection property="tags" ofType="Tag">
            <id column="tid" property="id"></id>
            <result column="tname" property="name"></result>
        </collection>
    </resultMap>
    <insert id="insert" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
        insert into t_student(name, age, qq, phone, bir, starts, attr, mark, clazzId, groupId, cityId)
        values (#{name}, #{age}, #{qq}, #{phone}, #{bir}, #{starts}, #{attr}, #{mark}, #{clazz.id},
                #{group.id}, #{city.id})
    </insert>
    <!--    修改学生-->
    <update id="update" parameterType="Student">
        update t_student
        set name=#{name},
            age=#{age},
            qq=#{qq},
            phone=#{phone},
            bir=#{bir},
            starts=#{starts},
            attr=#{attr},
            mark=#{mark},
            clazzId=#{clazz.id},
            groupId=#{group.id},
            cityId=#{city.id}
        where id = #{id}
    </update>
    <!--    关系表-->
    <insert id="insertRelation">
        insert into t_student_tag(sid, tid)
        values (#{sid}, #{tid})
    </insert>
    <!--    批量添加关系表-->
    <insert id="insertRelation2">
        insert into t_student_tag(sid, tid)values
        <foreach collection="sids" item="sid" separator=",">
            <foreach collection="tids" item="tid" separator=",">
                    (#{sid},#{tid})
            </foreach>
        </foreach>
    </insert>
    <update id="updateRelation">
        update t_student_tag
        set sid=#{sid},
            tid=#{tid}
    </update>
    <delete id="deleteRelation" parameterType="int">
        delete
        from t_student_tag
        where sid = #{id}
    </delete>
    <!--    -->
    <delete id="deleteById" parameterType="int">
        delete
        from t_student
        where id = #{id}
    </delete>
    <select id="selectLimit" resultMap="all">
        select s.id,
        s.name,
        s.age,
        s.qq,
        s.phone,
        s.bir,
        s.starts,
        s.attr,
        s.mark,
        c.name cname,
        c.id cid,
        g.name gname,
        g.id gid,
        t.name tname,
        t.id tid,
        tc.name tcname,
        tc.id tcid
        from (SELECT * from t_student
        <where>
            <if test="student.id!=null">
                id=#{student.id}
            </if>
            <if test="student.name!=null and !student.name.isEmpty()">
                and name like concat('%',#{student.name},'%')
            </if>
            <if test="student.qq!=null and !student.qq.isEmpty()">
                and qq=#{student.qq}
            </if>
            <if test="student.phone!=null and !student.phone.isEmpty()">
                and phone=#{student.phone}
            </if>
        </where>
        limit #{startIndex},#{size}
        )s
        left join t_clazz c on s.clazzId = c.id
        left join t_group g on s.groupId = g.id
        left join t_city tc on s.cityId = tc.id
        left join t_student_tag tsg on s.id = tsg.sid
        left join t_tag t on t.id = tsg.tid

    </select>
    <select id="queryCount" resultType="java.lang.Integer" parameterType="Student">
        select count(*)
        from t_student s
        <where>
            <if test="id!=null">
                s.id=#{id}
            </if>

            <if test="name!=null and !name.isEmpty()">
                and s.name like concat('%',#{name},'%')
            </if>
            <if test="qq!=null and !qq.isEmpty()">
                and s.qq=#{qq}
            </if>
            <if test="phone!=null and !phone.isEmpty()">
                and s.phone=#{phone}
            </if>
            <if test="clazz!=null and clazz.id!=null">
                and s.clazzId=#{clazz.id}
            </if>
            <if test="group!=null and group.id!=null">
                and s.groupId=#{group.id}
            </if>
            <if test="city!=null and city.id!=null">
                and s.cityId=#{city.id}
            </if>
        </where>
    </select>
    <select id="selectGroupStudentCount" resultType="java.lang.Integer" parameterType="int">
        select count(*)
        from t_student
        where groupId = #{id}
    </select>
    <select id="select" resultMap="all" parameterType="Student">
        select s.id,
        s.name,
        s.age,
        s.qq,
        s.phone,
        s.bir,
        s.starts,
        s.attr,
        s.mark,
        c.name cname,
        c.id cid,
        g.name gname,
        g.id gid,
        t.name tname,
        t.id tid,
        tc.name tcname,
        tc.id tcid
        from t_student s
        left join t_clazz c on s.clazzId = c.id
        left join t_group g on s.groupId = g.id
        left join t_city tc on s.cityId = tc.id
        left join t_student_tag tsg on s.id = tsg.sid
        left join t_tag t on t.id = tsg.tid
        <where>
            <if test="id!=null">
                s.id=#{id}
            </if>

            <if test="name!=null and !name.isEmpty()">
                and s.name like concat('%',#{name},'%')
            </if>
            <if test="qq!=null and !qq.isEmpty()">
                and s.qq=#{qq}
            </if>
            <if test="phone!=null and !phone.isEmpty()">
                and s.phone=#{phone}
            </if>
            <if test="clazz!=null and clazz.id!=null">
                and s.clazzId=#{clazz.id}
            </if>
            <if test="group!=null and group.id!=null">
                and s.groupId=#{group.id}
            </if>
            <if test="city!=null and city.id!=null">
                and s.cityId=#{city.id}
            </if>
        </where>
    </select>
</mapper>